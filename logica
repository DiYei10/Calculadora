clase_abstracta.py

from abc import ABC, abstractmethod

class CalculadoraBase(ABC):

	@abstractmethod
	def suma(self, a:int, b:int) -> int:
		raise NotImplementedError
		
	@abstractmethod
	def multiplicacion(self, a:int, b:int) -> int:
		raise NotImplementedError
		
	@abstractmethod
	def division(self, a:int, b:int) -> int:
		raise NotImplementedError
		
		
		
clase.py

from clase_abstracta import CalculadoraBase

class Calculadora(CalculadoraBase):

	def suma(self, a:int, b:int) -> int:
		return a + b
		
	def multiplicacion(self, a:int, b:int) -> int:
		return a * b
		
	def division(self, a:int, b:int) -> int:
		return a / b
		
		
		
main.py

from clase import Calculadora

suma_huevos: Calculadora = Calculadora(2)

while(true):

	print("1 -> Suma")
	print("1 -> Multiplicar")
	print("1 -> ")
	
	opcion:str = input("Ingrese opcion: ")
	
	a:int = int(input("Agregue numero a: "))
	b:int = int(input("Agregue numero b: "))
	
	if opcion == "1":
		print(f"S: {suma_huevos.suma(a, b)}")
	
	elif opcion == "2":
		print(f"M: {suma_huevos.multiplicacion(a, b)}")
		
	elif opcion == "3":
		break
	else:
		print(f"Opcion {opcion} no valida")
